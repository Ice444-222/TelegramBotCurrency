from aiogram import Router, F
from aiogram.filters import CommandStart, Command
import keyboards.basic_keyboards as base_keyboard
import variables.states as st
import functions.data_parse as dp

router = Router()


@router.message(CommandStart())
async def handle_start(message):
    await message.answer(text="–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é! –Ø –±–æ—Ç –¥–ª—è –≤—ã–≤–æ–¥–∞ –∞–∫—Ç—É–∞–ª—å–Ω–æ–≥–æ –∫—É—Ä—Å–∞ –≤–∞–ª—é—Ç ü´° ")
    await message.answer(text="–í—ã –º–æ–∂–µ—Ç–µ —Å–¥–µ–ª–∞—Ç—å –∑–∞–ø—Ä–æ—Å —Å—Ä–∞–∑—É –ø–æ –≤—Å–µ–º –≤–∞–ª—é—Ç–∞–º —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –∞–∫—Ç—É–∞–ª—å–Ω—ã–π –∫—É—Ä—Å –¶–ë üëµ")
    await message.answer(
        text=(
            "–¢–∞–∫–∂–µ –≤—ã –º–æ–∂–µ—Ç–µ —Å–¥–µ–ª–∞—Ç—å –∑–∞–ø—Ä–æ—Å –ø–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π "
            "–≤–∞–ª—é—Ç–µ, –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫—É—Ä—Å –Ω–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é –¥–∞—Ç—É –∏ "
            "—Ç–∞–∫–∂–µ —É–≤–∏–¥–µ—Ç—å –∫—É—Ä—Å –ú–æ—Å–∫–æ–≤—Å–∫–æ–π –ë–∏—Ä–∂—ã –µ—Å–ª–∏ –¥–∞–Ω–Ω–∞—è –≤–∞–ª—é—Ç–∞ —Ç–∞–º —Ç–æ—Ä–≥—É–µ—Ç—Å—è. ü§ë"
        ), reply_markup=base_keyboard.get_on_start_kb()
    )


@router.message(F.text == '–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
@router.message(Command("menu"))
async def handle_menu(message, state):
    await state.set_state(st.ClientState.MAIN_MENU)
    await message.answer(text='–û—Ç–ø—Ä–∞–≤–ª—è—é –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é...', reply_markup=base_keyboard.get_on_start_kb())

@router.message(F.text == '–ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –∫—É—Ä—Å—ã –≤–∞–ª—é—Ç!')
@router.message(Command("curs_all"))
async def handle_curs_all(message):
    await message.answer(text = await dp.get_curs_all(), reply_markup=base_keyboard.get_on_start_kb())

@router.message(F.text == '–í—ã–±—Ä–∞—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –∫—É—Ä—Å')
@router.message(Command("curs"))
async def handle_curs_choice(message):
    await message.answer(text='–í—ã–±–∏—Ä–∞–π—Ç–µ!', reply_markup=base_keyboard.curs_choice_kb())

@router.message(F.text == '–ù–∞–∑–∞–¥ –∫ –≤—ã–±–æ—Ä—É –≤–∞–ª—é—Ç—ã')
async def handle_curs_date_response(message):
    await message.answer(text="–û—Ç–ø—Ä–∞–≤–ª—è—é –Ω–∞–∑–∞–¥.", reply_markup=base_keyboard.curs_choice_kb())
